<Page
    x:Class="TPMPCRCalculator.Views.LandingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TPMPCRCalculator"
    xmlns:c="using:TPMPCRCalculator.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ContentContainer.Margin" Value="12,0,24,0"/>
                        <Setter Target="title.Style" Value="{StaticResource PageTitleTextBlockStyle}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ContentContainer.Margin" Value="0,0,12,0"/>
                        <Setter Target="title.Style" Value="{StaticResource NarrowPageTitleTextBlockStyle}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <c:PageHeader x:Name="pageHeader">
            <c:PageHeader.HeaderContent>
                <TextBlock x:Name="title" Style="{StaticResource PageTitleTextBlockStyle}" Text="App Overview"/>
            </c:PageHeader.HeaderContent>
        </c:PageHeader>

        <ScrollViewer Grid.Row="1" EntranceNavigationTransitionInfo.IsTargetElement="True" Margin="12,4,0,0">
            <StackPanel x:Name="ContentContainer" Margin="12,0,24,0">
                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}">TPM PCR Calculator</TextBlock>
                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Margin="0,4">This tool allows to calculate the content of a TPM PCR the way a TPM would do it.</TextBlock>
                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Margin="0,4">A Trusted Platform Module (TPM) Platform Configuration Register (PCR) is a register that can 
                    only be reset to zero when the TPM device is reset and only modified by a one-way (or trap door) function called Extend. The Extend function concatenates the 
                    existing value of the PCR with the parameter of the function and calculates a hash. The digest of the hash becomes the new value of the PCR.</TextBlock>

                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}">Hash Calculator Tool</TextBlock>
                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Margin="0,4">This tool allows to perform different kinds of hash calculations.</TextBlock>

                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}">HMAC Hash Calculator Tool</TextBlock>
                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Margin="0,4">This tool allows to perform different kinds of hash calculations using HMAC keys.</TextBlock>

                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Margin="0,12,0,4">Overview</TextBlock>
                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Margin="0,4">
                    A "hash" or "hash function" is a computation that maps variable sized input data to
                    a fixed size output. A "cryptographic hash function" performs the mapping such that
                    is practically irreversible.
                </TextBlock>

                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Margin="0,4">
                    One well known cryptographic hash function is the secure hash algorithm (SHA). Usually SHA has
                    a number attached that determines the algorithm class (SHA1) or the size of the generated output
                    in bits (SHA256 - 256 bits output).
                </TextBlock>
            </StackPanel>
        </ScrollViewer>

        <CheckBox Grid.Row="2" x:Name="DontShowLandingPage" Margin="20,10" Content="Don't show this page in the future." Checked="DontShowLandingPage_Checked" />
    </Grid>
</Page>

